<resources>
    <string name="app_name">Kotlin_Basic_starter</string>
    <string name="vero">Vero</string>
    <string name="falso">Falso</string>
    <string name="titolo_questionario">Titolo Questionario</string>
    <string name="corretto">Corretto!</string>
    <string name="non_corretto">Non corretto!!</string>
    <string name="title_hint_crime">Enter a title for the crime</string>
    <string name="crime_title_label">Title</string>
    <string name="crime_details_label">Details</string>
    <string name="crimine_risolto">Crimine risolto</string>
    <string name="recyclerview_spiegazione">recyclerview si affida a CrimeListFragment per visualizzare la classe oggetti crime</string>
    <string name="recycler_view_alternate_spiegazione">L\'adapter CategorieAdapter nella cartella adattatori permette di visualizzaere due tipi di classi completamente diverse fra loro ,con diversi layout esempio preso da stackoverflow https://stackoverflow.com/questions/67880979/android-recycleview-multiple-viewtypes-not-working-in-kotlin</string>
    <string name="aggiungere_un_bottone_spiegazione">Esercizio finale del capitolo 9 aggiungere una proprietà requiresPolice che se è vera aggiungere un bottone.Questo
    lo si fà facendo override della funzione getItemViewType e estrapolando da  essa due valori 0 e 1.In base a questi due valori si deciderà
    di creare il rispettivo holder e associarvi il layout giusto</string>
    <string name="recyclerview_spiegazione_cap_10">In questo capitolo 10 si introduce  il constraintLayout,sottolinenado il fatto che è molto più performante.l adattatore della recycler view è presente nell fragment CrimeListCap10
     In questo capitolo è stata introdotta un immagine che comparirà solo se il crimine è stato risolto</string>
</resources>